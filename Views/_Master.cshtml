@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage

@using Microsoft.AspNetCore.Http.Extensions
@using Umbraco.Cms.Web.Common.Models
@using Umbraco.Cms.Web.Website.Controllers
@using Umbraco.Extensions
@using Umbraco.Cms.Web.Common.PublishedModels
@using Umbraco.Cms.Core.Services
@using System.Dynamic
@inject IMemberGroupService MemberGroupService
@inject ILocalizationService localizationService
@{
    Layout = null;
}
@{
    var newsArticles = Umbraco.Content(Guid.Parse("58ee1914-da7a-42bb-80f7-eab594ebfcb6"))
            .Children()
            .Where(x => x.IsVisible())
            .OrderByDescending(x => x.CreateDate).Take(3);

    var reviewArticles = Umbraco.Content(Guid.Parse("7979592d-c5f0-4484-8f80-a0b8cb7d94d5"))
    .Children()
    .Where(x => x.IsVisible())
    .OrderByDescending(x => x.CreateDate).Take(3);

    var sideMenuContent = new List<KeyValuePair<string, IEnumerable<IPublishedContent>>>()
{
new KeyValuePair<string, IEnumerable<IPublishedContent>>("News", newsArticles),
new KeyValuePair<string, IEnumerable<IPublishedContent>>("Reviews", reviewArticles),
};

    var menuItems = Umbraco.Content(Guid.Parse("4c2950ff-01aa-4ded-8b61-b4d4a501fc93"))
    .Children()
    .Where(x => x.IsVisible());

    var cultureName = Umbraco.CultureDictionary.Culture.NativeName.ToFirstUpper();
    var cultureTag = Umbraco.CultureDictionary.Culture.Name;
    var home = Umbraco.Content("a38d2ea0-669a-4c79-bc56-ce04e523310b");
    var about = Umbraco.Content("ff5a3f5d-aec9-41f5-b182-dc28e3b197eb");
    var isPremium = Context.User.IsInRole("Premium");

    var coolTitle = Umbraco.GetDictionaryValue("CoolTitle");
    var coolText = Umbraco.GetDictionaryValue("CoolText");
    var uncoolText = Umbraco.GetDictionaryValue("UncoolText");
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="Umbraco - Assignment 2">

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@("@")5.1.3/dist/css/bootstrap.min.css"
        integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <link rel="stylesheet" href="/css/main.css" />

    <title>Umbraco - Assignment 2</title>
</head>

<body>
    <header class="p-3">
        <div class="container">
            <div class="d-flex flex-wrap align-items-center justify-content-center justify-content-lg-start">
                <ul class="nav col-12 col-lg-auto me-lg-auto mb-2 justify-content-center mb-md-0">
                    <li>
                        <a class="nav-link px-2" href="@home.Url()">@home.Name</a>
                    </li>

                    @foreach (var item in menuItems)
                    {
                        if (item.Name.ToLower().Contains("premium") && !Context.User.IsInRole("Premium"))
                        {
                            <li>
                                <a class="nav-link px-2" href="@item.Url()">
                                    @Umbraco.GetDictionaryValue("GetPremium")
                                </a>
                            </li>
                        }
                        else
                        {
                            <li>
                                <a class="nav-link px-2" href="@item.Url()">
                                    @item.Name
                                </a>
                            </li>
                        }
                    }

                    <li>
                        <a class="nav-link px-2" href="@about.Url()">@about.Name</a>
                    </li>
                </ul>
                <div class="text-end me-3">
                    @foreach (var culture in localizationService.GetAllLanguages())
                    {
                        if (culture.IsoCode == cultureTag)
                        {
                            <span title="@culture.CultureInfo.NativeName">@culture.IsoCode.ToUpper()</span>
                        }
                        else
                        {
                            <a title="@culture.CultureInfo.NativeName"
                        href="@Model.Url(culture.IsoCode)">@culture.IsoCode.ToUpper()</a>
                        }
                    }
                </div>
                <div class="text-end">
                    @{
                        await Html.RenderPartialAsync("_LoginStatus");
                    }
                </div>
            </div>
        </div>
    </header>

    <main class="container">
        <div class="row justify-content-between">
            <section class="col-8">
                @RenderBody()
            </section>

            <section class="col-3 article-list">
                <div class="border border-warning rounded-2 p-2 my-3">
                    <h2>@coolTitle<a class="text-secondary"
                            href="@Umbraco.Content("9deadc77-b944-4fc0-b062-35cb85f897c5").Url()">?</a></h2>
                    <p>@(isPremium ? coolText : uncoolText)</p>
                </div>
                @foreach (var kvp in sideMenuContent)
                {
                    <div class="border border-warning rounded-2 p-2 my-3">
                        <h2 class="fs-4 border-bottom">@kvp.Key</h2>
                        <ul class="list-group list-unstyled">
                            @foreach (var item in kvp.Value)
                            {
                                <li>
                                    <a href="@item.Url()">
                                        @item.Name()
                                    </a>
                                </li>
                            }
                        </ul>
                    </div>
                }
            </section>
        </div>
    </main>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@("@")5.1.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p"
        crossorigin="anonymous"></script>
    <script type="text/javascript" src="js/script.js"></script>
</body>

</html>